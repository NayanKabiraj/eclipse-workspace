package com.guiautomation.Base;

import java.io.FileInputStream;
import java.sql.DriverManager;
import java.util.Properties;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Parameters;



import io.github.bonigarcia.wdm.WebDriverManager;

public class BaseTest {
	
	



	WebDriver driver;
	WebDriverManager drvManager;
	public Page page;
	public Properties prop;
	FileInputStream ip;
	static String propLoc=System.getProperty("user.dir")+ "src/main/java/com/fastcrib/configuration";
	
	
	
	@BeforeMethod
	@Parameters({"BROWSER,ENVIRONMENT"}) 
	public void setUpTest(String browser, String configuration) {
		prop= new Properties();
		
		if (browser.equalsIgnoreCase("chrome")) {
			drvManager.chromedriver().setup();
			driver= new ChromeDriver();
		}
		else if (browser.equalsIgnoreCase("ff")) {
			drvManager.firefoxdriver().setup();
			driver= new FirefoxDriver();
		}
		else if (browser.equalsIgnoreCase("ie")) {
			drvManager.iedriver().setup();
			driver= new InternetExplorerDriver();
		}
		else {
			System.out.println(browser+ " is not a configured browser");
		}
		try {
		if (configuration.equalsIgnoreCase("TST")) {
				ip=new FileInputStream(propLoc + "TST.properties");
			}
		else if(configuration.equalsIgnoreCase("STAGE")) {
			ip=new FileInputStream( propLoc + "STAGE.properties");
		}
		else if(configuration.equalsIgnoreCase("PROD")) {
			ip=new FileInputStream( propLoc + "PROD.properties");
		}
		prop.load(ip);
		}catch(Exception e) {
			System.out.println(e.getMessage());
		}

		driver.get(prop.getProperty("URL"));
		page= new Action(driver);
	}
	
	
	@AfterMethod
	public void tearDown() {
		driver.quit();
	}

}
